add jms/q_002 to be linked to IBM mq jndi

ChatGPT said:
Updated Dockerfile for WildFly
This updated Dockerfile will:

Deploy Two EAR Files to WildFly.
Configure JDBC Resources for IBM Db2 (ADB2).
Configure JMS Queue (jms/q_002) linked to IBM MQ.
Modify standalone.xml using a WildFly CLI script.
Dockerfile
dockerfile
Copy
Edit
FROM jboss/wildfly:latest

# Set working directory
WORKDIR /opt/jboss/wildfly

# Copy EAR files for deployment
COPY myapp1.ear /opt/jboss/wildfly/standalone/deployments/
COPY myapp2.ear /opt/jboss/wildfly/standalone/deployments/

# Copy IBM Db2 JDBC driver
COPY db2jcc4.jar /opt/jboss/wildfly/standalone/deployments/

# Copy IBM MQ JMS driver
COPY com.ibm.mq.allclient.jar /opt/jboss/wildfly/standalone/deployments/

# Copy CLI script for configuring the datasource and JMS queue
COPY configure-wildfly.cli /opt/jboss/wildfly/configure-wildfly.cli

# Run CLI script to configure the datasource and JMS queue
RUN /opt/jboss/wildfly/bin/jboss-cli.sh --file=/opt/jboss/wildfly/configure-wildfly.cli

# Expose WildFly ports
EXPOSE 8080 9990

# Start WildFly
CMD ["/opt/jboss/wildfly/bin/standalone.sh", "-b", "0.0.0.0"]
CLI Script (configure-wildfly.cli)
This script:

Adds IBM Db2 JDBC Driver (db2jcc4.jar).
Creates a Datasource (ADB2DS) for IBM Db2.
Configures a JMS Queue (jms/q_002) linked to IBM MQ.
Sets up a JNDI entry (java:/jms/q_002).
plaintext
Copy
Edit
embed-server --std-out=echo --server-config=standalone.xml

# Add IBM Db2 JDBC Driver
/subsystem=datasources/jdbc-driver=db2:add(driver-name=db2, driver-module-name=com.ibm.db2, driver-class-name=com.ibm.db2.jcc.DB2Driver)

# Configure IBM Db2 Datasource
/subsystem=datasources/data-source=ADB2DS:add(jndi-name=java:/ADB2DS, driver-name=db2, connection-url=jdbc:db2://db2host:50000/mydatabase, user-name=myuser, password=mypassword, min-pool-size=5, max-pool-size=20, enabled=true)

# Add IBM MQ JMS Connection Factory
/subsystem=messaging-activemq/server=default/jms-connection-factory=IBM_MQ_CF:add(entries=[java:/jms/IBM_MQ_CF], connectors=[http-connector])

# Configure IBM MQ Queue Destination
/subsystem=messaging-activemq/server=default/jms-queue=jms/q_002:add(entries=[java:/jms/q_002])

stop-embedded-server
Building & Running the WildFly Container
1. Build the Docker Image
sh
Copy
Edit
docker build -t wildfly-adb2-mq .
2. Run the Container
sh
Copy
Edit
docker run -p 8080:8080 -p 9990:9990 wildfly-adb2-mq
Testing the Setup
1. Check Datasource in WildFly Admin Console
Open http://localhost:9990
Navigate to Configuration â†’ Subsystems â†’ Datasources
Verify if ADB2DS appears.
2. Check JMS Queue
Navigate to Configuration â†’ Subsystems â†’ Messaging â†’ Default Server â†’ Queues
Ensure jms/q_002 exists.
3. Test the IBM MQ Connection
Run:

sh
Copy
Edit
docker exec -it <container_id> /opt/jboss/wildfly/bin/jboss-cli.sh --connect
Then:

plaintext
Copy
Edit
/subsystem=messaging-activemq/server=default/jms-queue=jms/q_002:read-resource
Summary
âœ… Deploys Two EAR Files
âœ… Configures JDBC Datasource for IBM Db2 (ADB2DS)
âœ… Creates a JMS Queue (jms/q_002) linked to IBM MQ
âœ… Sets up JNDI Resources (java:/jms/q_002)

Would you like additional configurations, such as XA transactions, security settings, or clustering? ðŸš€
